version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 60s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  app:
    image: staff:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_container:5430/postgres_db
      SPRING_DATASOURCE_USERNAME: postgres_user
      SPRING_DATASOURCE_PASSWORD: postgres_password
      SPRING_LIQUIBASE_CHANGELOG: classpath:/db/changelog/db.changelog-master.xml
    ports:
      - "8080:8080"
    depends_on:
        postgres:
          condition: service_healthy
    restart: unless-stopped
volumes:
  pgdata:
    driver: local